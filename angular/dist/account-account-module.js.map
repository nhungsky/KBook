{"version":3,"sources":["./src/account/tenant/tenant-change-dialog.component.ts","./src/account/tenant/tenant-change-dialog.component.html","./src/account/layout/account-languages.component.ts","./src/account/layout/account-languages.component.html","./src/account/register/register.component.ts","./src/account/register/register.component.html","./src/account/layout/account-header.component.ts","./src/account/layout/account-header.component.html","./src/account/account-routing.module.ts","./src/account/layout/account-footer.component.ts","./src/account/layout/account-footer.component.html","./src/shared/AppEnums.ts","./src/account/account.component.ts","./src/account/account.component.html","./src/account/login/login.component.ts","./src/account/login/login.component.html","./src/account/account.module.ts","./src/account/tenant/tenant-change.component.ts","./src/account/tenant/tenant-change.component.html"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { AccountServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { AppTenantAvailabilityState } from '@shared/AppEnums';\nimport {\n  IsTenantAvailableInput,\n  IsTenantAvailableOutput\n} from '@shared/service-proxies/service-proxies';\n\n@Component({\n  templateUrl: './tenant-change-dialog.component.html'\n})\nexport class TenantChangeDialogComponent extends AppComponentBase {\n  saving = false;\n  tenancyName = '';\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    public bsModalRef: BsModalRef\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    if (!this.tenancyName) {\n      abp.multiTenancy.setTenantIdCookie(undefined);\n      this.bsModalRef.hide();\n      location.reload();\n      return;\n    }\n\n    const input = new IsTenantAvailableInput();\n    input.tenancyName = this.tenancyName;\n\n    this.saving = true;\n    this._accountService\n      .isTenantAvailable(input)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: IsTenantAvailableOutput) => {\n        switch (result.state) {\n          case AppTenantAvailabilityState.Available:\n            abp.multiTenancy.setTenantIdCookie(result.tenantId);\n            location.reload();\n            return;\n          case AppTenantAvailabilityState.InActive:\n            this.message.warn(this.l('TenantIsNotActive', this.tenancyName));\n            break;\n          case AppTenantAvailabilityState.NotFound:\n            this.message.warn(\n              this.l('ThereIsNoTenantDefinedWithName{0}', this.tenancyName)\n            );\n            break;\n        }\n      });\n  }\n}\n","<form\n  class=\"form-horizontal\"\n  autocomplete=\"off\"\n  #changeTenantForm=\"ngForm\"\n  (ngSubmit)=\"save()\"\n>\n  <abp-modal-header\n    [title]=\"'ChangeTenant' | localize\"\n    (onCloseClick)=\"bsModalRef.hide()\"\n  ></abp-modal-header>\n  <div class=\"modal-body\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 col-form-label\" for=\"tenancyName\">\n        {{ \"TenancyName\" | localize }}\n      </label>\n      <div class=\"col-md-9\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"tenancyName\"\n          name=\"tenancyName\"\n          [(ngModel)]=\"tenancyName\"\n          maxlength=\"64\"\n        />\n      </div>\n    </div>\n    <span>\n      <i class=\"fa fa-info-circle\"></i>\n      {{ \"LeaveEmptyToSwitchToHost\" | localize }}\n    </span>\n  </div>\n  <abp-modal-footer\n    [cancelDisabled]=\"saving\"\n    [saveDisabled]=\"!changeTenantForm.form.valid || saving\"\n    (onCancelClick)=\"bsModalRef.hide()\"\n  ></abp-modal-footer>\n</form>\n","import {\n  Component,\n  OnInit,\n  Injector,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { filter as _filter } from 'lodash-es';\n\n@Component({\n  selector: 'account-languages',\n  templateUrl: './account-languages.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountLanguagesComponent extends AppComponentBase\n  implements OnInit {\n  languages: abp.localization.ILanguageInfo[];\n  currentLanguage: abp.localization.ILanguageInfo;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.languages = _filter(\n      this.localization.languages,\n      (l) => !l.isDisabled\n    );\n    this.currentLanguage = this.localization.currentLanguage;\n  }\n\n  changeLanguage(languageName: string): void {\n    abp.utils.setCookieValue(\n      'Abp.Localization.CultureName',\n      languageName,\n      new Date(new Date().getTime() + 5 * 365 * 86400000), // 5 year\n      abp.appPath\n    );\n\n    location.reload();\n  }\n}\n","﻿<div class=\"text-center\">\n  <ng-container *ngFor=\"let language of languages\">\n    <a\n      *ngIf=\"language.name != currentLanguage.name\"\n      href=\"javascript:void(0);\"\n      (click)=\"changeLanguage(language.name)\"\n    >\n      <span\n        title=\"{{ language.displayName }}\"\n        [attr.class.current-language-icon]=\"\n          language.name != currentLanguage.name\n        \"\n      >\n        <i class=\"d-inline-block mx-1 {{ language.icon }}\"></i>\n      </span>\n    </a>\n  </ng-container>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport {\n  AccountServiceProxy,\n  RegisterInput,\n  RegisterOutput\n} from '@shared/service-proxies/service-proxies';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\n\n@Component({\n  templateUrl: './register.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class RegisterComponent extends AppComponentBase {\n  model: RegisterInput = new RegisterInput();\n  saving = false;\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    private _router: Router,\n    private authService: AppAuthService\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    this.saving = true;\n    this._accountService\n      .register(this.model)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: RegisterOutput) => {\n        if (!result.canLogin) {\n          this.notify.success(this.l('SuccessfullyRegistered'));\n          this._router.navigate(['/login']);\n          return;\n        }\n\n        // Autheticate\n        this.saving = true;\n        this.authService.authenticateModel.userNameOrEmailAddress = this.model.userName;\n        this.authService.authenticateModel.password = this.model.password;\n        this.authService.authenticate(() => {\n          this.saving = false;\n        });\n      });\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">Đăng ký</h4>\n  <form autocomplete=\"off\" #registerForm=\"ngForm\" (ngSubmit)=\"save()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" name=\"name\" placeholder=\"Tên\" required maxlength=\"64\"\n          [(ngModel)]=\"model.name\" #nameModel=\"ngModel\" #nameEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"nameModel\" [controlEl]=\"nameEl\"></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" name=\"surname\" placeholder=\"Họ và tên lót\" required maxlength=\"64\"\n          [(ngModel)]=\"model.surname\" #surnameModel=\"ngModel\" #surnameEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"surnameModel\" [controlEl]=\"surnameEl\"></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"email\" class=\"form-control\" name=\"emailAddress\" placeholder=\"Địa chỉ email\" required\n          maxlength=\"256\" pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$\" [(ngModel)]=\"model.emailAddress\"\n          #emailAddressModel=\"ngModel\" #emailAddressEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-envelope\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"emailAddressModel\" [controlEl]=\"emailAddressEl\"></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"email\" class=\"form-control\" name=\"userName\" placeholder=\"Tên đăng nhập\" required maxlength=\"32\"\n          [(ngModel)]=\"model.userName\" #userNameModel=\"ngModel\" #userNameEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"userNameModel\" [controlEl]=\"userNameEl\"></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Mật khẩu\" [(ngModel)]=\"model.password\"\n          required maxlength=\"32\" #passwordModel=\"ngModel\" #passwordEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"passwordModel\" [controlEl]=\"passwordEl\"></abp-validation-summary>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <button type=\"button\" class=\"btn btn-default\" [disabled]=\"saving\" [routerLink]=\"['../login']\">\n          <i class=\"fa fa-arrow-circle-left\"></i> Quay lại\n        </button>\n      </div>\n      <div class=\"col-4\">\n        <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"!registerForm.form.valid || saving\">\n          Đăng ký\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, ChangeDetectionStrategy, Optional, Inject, OnInit } from '@angular/core';\nimport { API_BASE_URL } from \"@shared/service-proxies/service-proxies\";\n\n@Component({\n  selector: 'account-header',\n  templateUrl: './account-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountHeaderComponent implements OnInit {\n  logoPath: string = \"\";\n  siteName: string = \"\";\n\n  public appBaseUrl = \"\";\n  constructor(@Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n    this.appBaseUrl = baseUrl;\n  }\n  ngOnInit(): void {\n    this.logoPath = this.appBaseUrl + abp.setting.get(\"LOGO_PATH\");\n    this.siteName = abp.setting.get(\"SITE_NAME\");\n  }\n}\n","<div class=\"login-logo\">\n  <!-- <a href=\"/\"><b>Angular</b></a> -->\n  <img src=\"{{logoPath}}\" alt=\"{{siteName}}\" class=\"brand-image\" style=\"opacity: 1;\" style=\"max-width: 150px;\" />\n  <!-- <span class=\"brand-text font-weight-bold text-white\">{{siteName}}</span> -->\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            {\n                path: '',\n                component: AccountComponent,\n                children: [\n                    { path: 'login', component: LoginComponent },\n                    { path: 'register', component: RegisterComponent }\n                ]\n            }\n        ])\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AccountRoutingModule { }\n","import { Component, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  selector: 'account-footer',\n  templateUrl: './account-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountFooterComponent extends AppComponentBase {\n  currentYear: number;\n  versionText: string;\n\n  constructor(injector: Injector) {\n    super(injector);\n\n    this.currentYear = new Date().getFullYear();\n    this.versionText =\n      this.appSession.application.version +\n      ' [' +\n      this.appSession.application.releaseDate.format('YYYYDDMM') +\n      ']';\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 text-center\">\n    <small>\n      Copyright &copy; {{ currentYear }}\n      <b class=\"ml-2\">{{ \"Version\" | localize }}</b>\n      {{ versionText }}\n    </small>\n  </div>\n</div>\n","import { TenantAvailabilityState } from '@shared/service-proxies/service-proxies';\n\n\nexport class AppTenantAvailabilityState {\n    static Available: number = TenantAvailabilityState._1;\n    static InActive: number = TenantAvailabilityState._2;\n    static NotFound: number = TenantAvailabilityState._3;\n}\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Injector,\n  Renderer2\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  templateUrl: './account.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountComponent extends AppComponentBase implements OnInit {\n  constructor(injector: Injector, private renderer: Renderer2) {\n    super(injector);\n  }\n\n  showTenantChange(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit(): void {\n    this.renderer.addClass(document.body, 'login-page');\n  }\n}\n","<div class=\"login-box\">\n  <account-header></account-header>\n  <div class=\"card\">\n    <div *ngIf=\"showTenantChange()\" class=\"card-header\">\n      <tenant-change></tenant-change>\n    </div>\n    <div class=\"card-body login-card-body\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"card-footer\">\n      <!-- <account-languages></account-languages> -->\n    </div>\n  </div>\n  <account-footer></account-footer>\n</div>\n","import { Component, Inject, Injector, Optional } from '@angular/core';\nimport { AbpSessionService } from 'abp-ng2-module';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\nimport { API_BASE_URL } from \"@shared/service-proxies/service-proxies\";\n\n@Component({\n  templateUrl: './login.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class LoginComponent extends AppComponentBase {\n  submitting = false;\n  logoPath: string = \"\";\n  siteName: string = \"\";\n  public appBaseUrl = \"\";\n\n  constructor(\n    injector: Injector,\n    public authService: AppAuthService,\n    private _sessionService: AbpSessionService,\n    @Optional() @Inject(API_BASE_URL) baseUrl?: string\n  ) {\n    super(injector);\n    this.appBaseUrl = baseUrl;\n    this.logoPath = this.appBaseUrl + abp.setting.get(\"LOGO_PATH\");\n    this.siteName = abp.setting.get(\"SITE_NAME\");\n  }\n\n  get multiTenancySideIsTeanant(): boolean {\n    return this._sessionService.tenantId > 0;\n  }\n\n  get isSelfRegistrationAllowed(): boolean {\n    if (!this._sessionService.tenantId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  login(): void {\n    this.submitting = true;\n    this.authService.authenticate(() => (this.submitting = false));\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">Đăng nhập</h4>\n  <form novalidate autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" name=\"userNameOrEmailAddress\"\n          [(ngModel)]=\"authService.authenticateModel.userNameOrEmailAddress\" placeholder=\"Tên đăng nhập\" required\n          maxlength=\"256\" #userNameOrEmailAddressModel=\"ngModel\" #userNameOrEmailAddressEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"userNameOrEmailAddressModel\" [controlEl]=\"userNameOrEmailAddressEl\">\n      </abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"authService.authenticateModel.password\"\n        placeholder=\"Mật khẩu\" required maxlength=\"32\" #passwordModel=\"ngModel\" #passwordEl />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary [control]=\"passwordModel\" [controlEl]=\"passwordEl\"></abp-validation-summary>\n    </div>\n    <div class=\"form-group row\">\n      <div class=\"col-md-7\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"rememberMe\" name=\"rememberMe\"\n            [(ngModel)]=\"authService.rememberMe\" />\n          <label for=\"rememberMe\" class=\"custom-control-label\">\n            Ghi nhớ đăng nhập\n          </label>\n        </div>\n      </div>\n      <div class=\"col-md-5\">\n        <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"!loginForm.form.valid || submitting\">\n          Đăng nhập\n        </button>\n      </div>\n    </div>\n  </form>\n  <p *ngIf=\"isSelfRegistrationAllowed\" class=\"mb-1\">\n    <a [routerLink]=\"['../register']\">\n      <i class=\"fa fa-plus-circle\"></i> Đăng ký\n    </a>\n  </p>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientJsonpModule } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ServiceProxyModule } from '@shared/service-proxies/service-proxy.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { AccountComponent } from './account.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountLanguagesComponent } from './layout/account-languages.component';\nimport { AccountHeaderComponent } from './layout/account-header.component';\nimport { AccountFooterComponent } from './layout/account-footer.component';\n\n// tenants\nimport { TenantChangeComponent } from './tenant/tenant-change.component';\nimport { TenantChangeDialogComponent } from './tenant/tenant-change-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        HttpClientJsonpModule,\n        SharedModule,\n        ServiceProxyModule,\n        AccountRoutingModule,\n        ModalModule.forChild()\n    ],\n    declarations: [\n        AccountComponent,\n        LoginComponent,\n        RegisterComponent,\n        AccountLanguagesComponent,\n        AccountHeaderComponent,\n        AccountFooterComponent,\n        // tenant\n        TenantChangeComponent,\n        TenantChangeDialogComponent,\n    ],\n    entryComponents: [\n        // tenant\n        TenantChangeDialogComponent\n    ]\n})\nexport class AccountModule {\n\n}\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { TenantChangeDialogComponent } from './tenant-change-dialog.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'tenant-change',\n  templateUrl: './tenant-change.component.html'\n})\nexport class TenantChangeComponent extends AppComponentBase implements OnInit {\n  tenancyName = '';\n  name = '';\n\n  constructor(injector: Injector, private _modalService: BsModalService) {\n    super(injector);\n  }\n\n  get isMultiTenancyEnabled(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit() {\n    if (this.appSession.tenant) {\n      this.tenancyName = this.appSession.tenant.tenancyName;\n      this.name = this.appSession.tenant.name;\n    }\n  }\n\n  showChangeModal(): void {\n    const modal = this._modalService.show(TenantChangeDialogComponent);\n    if (this.appSession.tenant) {\n      modal.content.tenancyName = this.appSession.tenant.tenancyName;\n    }\n  }\n}\n","<div *ngIf=\"isMultiTenancyEnabled\" class=\"text-center tenant-change-component\">\n  <span>\n    {{ \"CurrentTenant\" | localize }}:\n    <span *ngIf=\"tenancyName\" title=\"{{ name }}\">\n      <strong>{{ tenancyName }}</strong>\n    </span>\n    <span *ngIf=\"!tenancyName\">{{ \"NotSelected\" | localize }}</span>\n    (<a href=\"javascript:;\" (click)=\"showChangeModal()\">\n      {{ \"Change\" | localize }} </a\n    >)\n  </span>\n</div>\n"],"sourceRoot":"webpack:///"}